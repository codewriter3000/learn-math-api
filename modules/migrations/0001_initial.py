# Generated by Django 5.0 on 2023-12-19 20:39

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Reading',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('content', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('definition', models.TextField()),
                ('term_type', models.CharField(choices=[('DEFINITION', 'Definition'), ('THEOREM', 'Theorem'), ('LEMMA', 'Lemma'), ('COROLLARY', 'Corollary'), ('ALGORITHM', 'Algorithm')], default='DEFINITION', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='TestBank',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ModuleDependency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('child_module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='child_module', to='modules.module')),
                ('parent_module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parent_module', to='modules.module')),
            ],
        ),
        migrations.AddField(
            model_name='module',
            name='depends_on',
            field=models.ManyToManyField(blank=True, through='modules.ModuleDependency', to='modules.module'),
        ),
        migrations.CreateModel(
            name='ModuleTerm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='module_with_term', to='modules.module')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='term_with_module', to='modules.term')),
            ],
        ),
        migrations.AddField(
            model_name='module',
            name='terms',
            field=models.ManyToManyField(blank=True, to='modules.term'),
        ),
        migrations.CreateModel(
            name='TermDependency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('child_term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='child_term', to='modules.term')),
                ('parent_term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parent_term', to='modules.term')),
            ],
        ),
        migrations.AddField(
            model_name='term',
            name='depends_on',
            field=models.ManyToManyField(blank=True, through='modules.TermDependency', to='modules.term'),
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('difficulty', models.SmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('question_type', models.CharField(choices=[('TRUE_FALSE', 'True or False'), ('MULTIPLE_CHOICE', 'Multiple Choice'), ('MULTIPLE_ANSWER', 'Multiple Answer'), ('NUMERIC', 'Numeric'), ('FORMULA', 'Formula'), ('LATEX', 'Latex'), ('SHORT_ANSWER', 'Short Answer'), ('OPEN_ENDED', 'Open-Ended')], max_length=15)),
                ('answer1', models.TextField(blank=True, null=True)),
                ('answer2', models.TextField(blank=True, null=True)),
                ('answer3', models.TextField(blank=True, null=True)),
                ('answer4', models.TextField(blank=True, null=True)),
                ('answer5', models.TextField(blank=True, null=True)),
                ('test_bank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_bank', to='modules.testbank')),
            ],
        ),
    ]
